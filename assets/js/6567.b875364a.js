"use strict";(self.webpackChunk_open_resource_discovery_spec_toolkit_website=self.webpackChunk_open_resource_discovery_spec_toolkit_website||[]).push([[6567],{6567:(t,e,a)=>{a.d(e,{diagram:()=>y});var r=a(3590),o=a(5871),i=a(3226),s=a(7633),n=a(797),l=a(8731),c=s.UI.packet,d=class{constructor(){this.packet=[],this.setAccTitle=s.SV,this.getAccTitle=s.iN,this.setDiagramTitle=s.ke,this.getDiagramTitle=s.ab,this.getAccDescription=s.m7,this.setAccDescription=s.EI}static{(0,n.K2)(this,"PacketDB")}getConfig(){const t=(0,i.$t)({...c,...(0,s.zj)().packet});return t.showBits&&(t.paddingY+=10),t}getPacket(){return this.packet}pushWord(t){t.length>0&&this.packet.push(t)}clear(){(0,s.IU)(),this.packet=[]}},p=(0,n.K2)(((t,e)=>{(0,o.S)(t,e);let a=-1,r=[],i=1;const{bitsPerRow:s}=e.getConfig();for(let{start:o,end:l,bits:c,label:d}of t.blocks){if(void 0!==o&&void 0!==l&&l<o)throw new Error(`Packet block ${o} - ${l} is invalid. End must be greater than start.`);if(o??=a+1,o!==a+1)throw new Error(`Packet block ${o} - ${l??o} is not contiguous. It should start from ${a+1}.`);if(0===c)throw new Error(`Packet block ${o} is invalid. Cannot have a zero bit field.`);for(l??=o+(c??1)-1,c??=l-o+1,a=l,n.Rm.debug(`Packet block ${o} - ${a} with label ${d}`);r.length<=s+1&&e.getPacket().length<1e4;){const[t,a]=b({start:o,end:l,bits:c,label:d},i,s);if(r.push(t),t.end+1===i*s&&(e.pushWord(r),r=[],i++),!a)break;({start:o,end:l,bits:c,label:d}=a)}}e.pushWord(r)}),"populate"),b=(0,n.K2)(((t,e,a)=>{if(void 0===t.start)throw new Error("start should have been set during first phase");if(void 0===t.end)throw new Error("end should have been set during first phase");if(t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);if(t.end+1<=e*a)return[t,void 0];const r=e*a-1,o=e*a;return[{start:t.start,end:r,label:t.label,bits:r-t.start},{start:o,end:t.end,label:t.label,bits:t.end-o}]}),"getNextFittingBlock"),h={parser:{yy:void 0},parse:(0,n.K2)((async t=>{const e=await(0,l.qg)("packet",t),a=h.parser?.yy;if(!(a instanceof d))throw new Error("parser.parser?.yy was not a PacketDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");n.Rm.debug(e),p(e,a)}),"parse")},k=(0,n.K2)(((t,e,a,o)=>{const i=o.db,n=i.getConfig(),{rowHeight:l,paddingY:c,bitWidth:d,bitsPerRow:p}=n,b=i.getPacket(),h=i.getDiagramTitle(),k=l+c,f=k*(b.length+1)-(h?0:l),u=d*p+2,w=(0,r.D)(e);w.attr("viewbox",`0 0 ${u} ${f}`),(0,s.a$)(w,f,u,n.useMaxWidth);for(const[r,s]of b.entries())g(w,s,r,n);w.append("text").text(h).attr("x",u/2).attr("y",f-k/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")}),"draw"),g=(0,n.K2)(((t,e,a,{rowHeight:r,paddingX:o,paddingY:i,bitWidth:s,bitsPerRow:n,showBits:l})=>{const c=t.append("g"),d=a*(r+i)+i;for(const p of e){const t=p.start%n*s+1,e=(p.end-p.start+1)*s-o;if(c.append("rect").attr("x",t).attr("y",d).attr("width",e).attr("height",r).attr("class","packetBlock"),c.append("text").attr("x",t+e/2).attr("y",d+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(p.label),!l)continue;const a=p.end===p.start,i=d-2;c.append("text").attr("x",t+(a?e/2:0)).attr("y",i).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",a?"middle":"start").text(p.start),a||c.append("text").attr("x",t+e).attr("y",i).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(p.end)}}),"drawWord"),f={draw:k},u={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},w=(0,n.K2)((({packet:t}={})=>{const e=(0,i.$t)(u,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`}),"styles"),y={parser:h,get db(){return new d},renderer:f,styles:w}}}]);