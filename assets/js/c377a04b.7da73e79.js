"use strict";(self.webpackChunk_open_resource_discovery_spec_toolkit_website=self.webpackChunk_open_resource_discovery_spec_toolkit_website||[]).push([[3361],{2939:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"index","title":"Overview","description":"Json Schema Specification Toolkit (v0 DRAFT)","source":"@site/docs/index.md","sourceDirName":".","slug":"/index","permalink":"/spec-toolkit/index","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"slug":"/index","sidebar_position":0,"title":"Overview"},"sidebar":"defaultSidebar","next":{"title":"Documentation","permalink":"/spec-toolkit/docs/"}}');var o=i(4848),a=i(8453);const s={slug:"/index",sidebar_position:0,title:"Overview"},r=void 0,c={},d=[{value:"Json Schema Specification Toolkit (v0 DRAFT)",id:"json-schema-specification-toolkit-v0-draft",level:2},{value:"Summary",id:"summary",level:3},{value:"Contact",id:"contact",level:3}];function l(e){const t={a:"a",admonition:"admonition",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"json-schema-specification-toolkit-v0-draft",children:"Json Schema Specification Toolkit (v0 DRAFT)"}),"\n",(0,o.jsx)(t.admonition,{title:"Quick Facts",type:"note",children:(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"STATUS"}),": ",(0,o.jsx)("span",{className:"feature-status-draft",children:"DRAFT"}),". This project is currently \ud83d\udea7 Work in Progress \ud83d\udea7 not yet recommended to be productively used."]}),"\n",(0,o.jsx)(t.li,{children:"v1 to be released Q4 2025 / Q1 2026."}),"\n"]})}),"\n",(0,o.jsx)(t.h3,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(t.p,{children:"If you're reading this page, you likely already understand the importance of formal interface contracts and specifications for integration and interoperability."}),"\n",(0,o.jsx)(t.p,{children:"But writing good interface contracts and specifications is hard:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"The specification needs to be understandable to humans: after all, developers have to implement them."}),"\n",(0,o.jsx)(t.li,{children:"It also needs to be machine-readable to avoid manual (and error prone) work and to build an ecosystem of clients and libraries around the spec."}),"\n",(0,o.jsx)(t.li,{children:"Examples are an important part of the documentation."}),"\n",(0,o.jsx)(t.li,{children:"All of the above has to be 100% in sync with each other and without contradictions, otherwise adopters will make different assumptions, which leads to a broken / misunderstood contract in practice."}),"\n",(0,o.jsx)(t.li,{children:"Adopters need ways to very quickly get feedback if they implemented the specification correctly, so early validation (CLI, CI/CD) and live-feedback (in an IDE) is crucial."}),"\n",(0,o.jsx)(t.li,{children:"Writing a technical interface contract is not trivial, many mistakes can be made."}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.strong,{children:"Json Schema Specification Toolkit"})," (short spec-toolkit) is a CLI program that helps you do that, based and expanded on the widespread ",(0,o.jsx)(t.a,{href:"https://json-schema.org/",children:"JSON Schema"})," standard."]}),"\n",(0,o.jsx)(t.p,{children:"It supports the JSON Schema specification creation and automatically generates documentation (in markdown format) out of the JSON Schema specification."}),"\n",(0,o.jsx)(t.p,{children:"Other output formats like Typescript types, markdown mermaid diagrams, csv for tabular data etc. are supported via plugins."}),"\n",(0,o.jsx)(t.h3,{id:"contact",children:"Contact"}),"\n",(0,o.jsxs)(t.p,{children:["Create a GitHub PR or ",(0,o.jsx)(t.a,{href:"https://github.com/open-resource-discovery/spec-toolkit/issues",children:"issue"})," if you have questions or want to propose changes."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);